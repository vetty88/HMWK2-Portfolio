{"ast":null,"code":"import _slicedToArray from \"C:\\\\MONASH BOOTCAMP\\\\YW_Yvette-Web\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\MONASH BOOTCAMP\\\\YW_Yvette-Web\\\\client\\\\src\\\\components\\\\CreateProjectForm\\\\index.js\";\nimport React, { useRef } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_PROJECT, LOADING } from \"../../utils/actions\";\nimport API from \"../../utils/API\";\n\nfunction CreateProjectForm() {\n  var titleRef = useRef();\n  var bodyRef = useRef();\n  var authorRef = useRef();\n\n  var _useStoreContext = useStoreContext(),\n      _useStoreContext2 = _slicedToArray(_useStoreContext, 2),\n      state = _useStoreContext2[0],\n      dispatch = _useStoreContext2[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: LOADING\n    });\n    API.savePROJECT({\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n      author: authorRef.current.value\n    }).then(function (result) {\n      dispatch({\n        type: ADD_PROJECT,\n        PROJECT: result.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    titleRef.current.value = \"\";\n    bodyRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid img-thumbnail\",\n    src: \"https://images.pexels.com/photos/459688/pexels-photo-459688.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Create a blog PROJECT\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group mt-5 mb-5\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mb-5\",\n    required: true,\n    ref: titleRef,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control mb-5\",\n    required: true,\n    ref: bodyRef,\n    placeholder: \"Body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control mb-5\",\n    ref: authorRef,\n    placeholder: \"Screen name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success mt-3 mb-5\",\n    disabled: state.loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Save PROJECT\")));\n}\n\nexport default CreateProjectForm;","map":{"version":3,"sources":["C:/MONASH BOOTCAMP/YW_Yvette-Web/client/src/components/CreateProjectForm/index.js"],"names":["React","useRef","useStoreContext","ADD_PROJECT","LOADING","API","CreateProjectForm","titleRef","bodyRef","authorRef","state","dispatch","handleSubmit","e","preventDefault","type","savePROJECT","title","current","value","body","author","then","result","PROJECT","data","catch","err","console","log","loading"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,qBAArC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAMC,QAAQ,GAAGN,MAAM,EAAvB;AACA,MAAMO,OAAO,GAAGP,MAAM,EAAtB;AACA,MAAMQ,SAAS,GAAGR,MAAM,EAAxB;;AAH2B,yBAIDC,eAAe,EAJd;AAAA;AAAA,MAIpBQ,KAJoB;AAAA,MAIbC,QAJa;;AAM3B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACAC,IAAAA,GAAG,CAACW,WAAJ,CAAgB;AACdC,MAAAA,KAAK,EAAEV,QAAQ,CAACW,OAAT,CAAiBC,KADV;AAEdC,MAAAA,IAAI,EAAEZ,OAAO,CAACU,OAAR,CAAgBC,KAFR;AAGdE,MAAAA,MAAM,EAAEZ,SAAS,CAACS,OAAV,CAAkBC;AAHZ,KAAhB,EAKGG,IALH,CAKQ,UAAAC,MAAM,EAAI;AACdZ,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEZ,WADC;AAEPqB,QAAAA,OAAO,EAAED,MAAM,CAACE;AAFT,OAAD,CAAR;AAID,KAVH,EAWGC,KAXH,CAWS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAXZ;AAaApB,IAAAA,QAAQ,CAACW,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACAX,IAAAA,OAAO,CAACU,OAAR,CAAgBC,KAAhB,GAAwB,EAAxB;AACD,GAlBD;;AAoBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,GAAG,EAAC,8GAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPF,eAQE;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,QAAQ,EAAEP,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,QAAQ,MAA7C;AAA8C,IAAA,GAAG,EAAEL,QAAnD;AAA6D,IAAA,WAAW,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAU,IAAA,SAAS,EAAC,mBAApB;AAAwC,IAAA,QAAQ,MAAhD;AAAiD,IAAA,GAAG,EAAEC,OAAtD;AAA+D,IAAA,WAAW,EAAC,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,GAAG,EAAEC,SAA1C;AAAqD,IAAA,WAAW,EAAC,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,QAAQ,EAAEC,KAAK,CAACoB,OAA9D;AAAuE,IAAA,IAAI,EAAC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CARF,CADF;AAmBD;;AAED,eAAexB,iBAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_PROJECT, LOADING } from \"../../utils/actions\";\nimport API from \"../../utils/API\";\n\nfunction CreateProjectForm() {\n  const titleRef = useRef();\n  const bodyRef = useRef();\n  const authorRef = useRef();\n  const [state, dispatch] = useStoreContext();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({ type: LOADING });\n    API.savePROJECT({\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n      author: authorRef.current.value\n    })\n      .then(result => {\n        dispatch({\n          type: ADD_PROJECT,\n          PROJECT: result.data\n        });\n      })\n      .catch(err => console.log(err));\n\n    titleRef.current.value = \"\";\n    bodyRef.current.value = \"\";\n  };\n\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <img\n          className=\"img-fluid img-thumbnail\"\n          src=\"https://images.pexels.com/photos/459688/pexels-photo-459688.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n        />\n      </div>\n      <h1>Create a blog PROJECT</h1>\n      <form className=\"form-group mt-5 mb-5\" onSubmit={handleSubmit}>\n        <input className=\"form-control mb-5\" required ref={titleRef} placeholder=\"Title\" />\n        <textarea className=\"form-control mb-5\" required ref={bodyRef} placeholder=\"Body\" />\n        <input className=\"form-control mb-5\" ref={authorRef} placeholder=\"Screen name\" />\n        <button className=\"btn btn-success mt-3 mb-5\" disabled={state.loading} type=\"submit\">\n          Save PROJECT\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateProjectForm;\n"]},"metadata":{},"sourceType":"module"}